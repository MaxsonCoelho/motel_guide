// Mocks generated by Mockito 5.4.2 from annotations
// in motel_guide/test/providers/motel_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:motel_guide/models/motel_model.dart' as _i5;
import 'package:motel_guide/repositories/motel_repository.dart' as _i3;
import 'package:motel_guide/services/api_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiService_0 extends _i1.SmartFake implements _i2.ApiService {
  _FakeApiService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MotelRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMotelRepository extends _i1.Mock implements _i3.MotelRepository {
  @override
  _i2.ApiService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeApiService_0(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeApiService_0(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i2.ApiService);

  @override
  _i4.Future<List<_i5.Motel>> getMotels() => (super.noSuchMethod(
        Invocation.method(
          #getMotels,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Motel>>.value(<_i5.Motel>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.Motel>>.value(<_i5.Motel>[]),
      ) as _i4.Future<List<_i5.Motel>>);
}
